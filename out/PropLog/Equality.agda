{-
This second-order equational theory was created from the following second-order syntax description:

syntax PropLog | PR

type
  * : 0-ary

term
  false : * | РіЦ
  or    : *  *  ->  * | _Рѕе_ l20
  true  : * | Ріц
  and   : *  *  ->  * | _РѕД_ l30
  not   : *  ->  * | ┬г_ r50

theory
  (РіЦUРѕер┤И) a |> or (false, a) = a
  (РіЦUРѕер┤┐) a |> or (a, false) = a
  (РѕеA) a b c |> or (or(a, b), c) = or (a, or(b, c))
  (РѕеC) a b |> or(a, b) = or(b, a)
  (РіцUРѕДр┤И) a |> and (true, a) = a
  (РіцUРѕДр┤┐) a |> and (a, true) = a
  (РѕДA) a b c |> and (and(a, b), c) = and (a, and(b, c))
  (РѕДDРѕер┤И) a b c |> and (a, or (b, c)) = or (and(a, b), and(a, c))
  (РѕДDРѕер┤┐) a b c |> and (or (a, b), c) = or (and(a, c), and(b, c))
  (РіЦXРѕДр┤И) a |> and (false, a) = false
  (РіЦXРѕДр┤┐) a |> and (a, false) = false
  (┬гNРѕер┤И) a |> or (not (a), a) = false
  (┬гNРѕер┤┐) a |> or (a, not (a)) = false
  (РѕДC) a b |> and(a, b) = and(b, a)
  (РѕеI) a |> or(a, a) = a
  (РѕДI) a |> and(a, a) = a
  (┬г┬▓) a |> not(not (a)) = a
  (РѕеDРѕДр┤И) a b c |> or (a, and (b, c)) = and (or(a, b), or(a, c))
  (РѕеDРѕДр┤┐) a b c |> or (and (a, b), c) = and (or(a, c), or(b, c))
  (РіцXРѕер┤И) a |> or (true, a) = true
  (РіцXРѕер┤┐) a |> or (a, true) = true
  (┬гNРѕДр┤И) a |> and (not (a), a) = false
  (┬гNРѕДр┤┐) a |> and (a, not (a)) = false
  (DMРѕД) a b |> not (and (a, b)) = or (not(a), not(b))
  (DMРѕе) a b |> not (or (a, b)) = and (not(a), not(b))
-}

module PropLog.Equality where

open import SOAS.Common
open import SOAS.Context
open import SOAS.Variable
open import SOAS.Families.Core
open import SOAS.Families.Build
open import SOAS.ContextMaps.Inductive

open import PropLog.Signature
open import PropLog.Syntax

open import SOAS.Metatheory.SecondOrder.Metasubstitution PR:Syn
open import SOAS.Metatheory.SecondOrder.Equality PR:Syn

private
  variable
    ╬▒ ╬▓ ╬│ ¤ё : *T
    ╬Њ ╬ћ ╬а : Ctx

infix 1 _Рќ╣_Ріб_РЅІРѓљ_

-- Axioms of equality
data _Рќ╣_Ріб_РЅІРѓљ_ : Рѕђ ­Юћљ ╬Њ {╬▒} Рєњ (­Юћљ Рќи PR) ╬▒ ╬Њ Рєњ (­Юћљ Рќи PR) ╬▒ ╬Њ Рєњ Set where
  РіЦUРѕер┤И : РЂЁ * РЂє╠Б             Рќ╣ РѕЁ Ріб       РіЦ Рѕе ­Юћъ РЅІРѓљ ­Юћъ
  РѕеA   : РЂЁ * РЂє РЂЁ * РЂє РЂЁ * РЂє╠Б Рќ╣ РѕЁ Ріб (­Юћъ Рѕе ­ЮћЪ) Рѕе ­Юћа РЅІРѓљ ­Юћъ Рѕе (­ЮћЪ Рѕе ­Юћа)
  РѕеC   : РЂЁ * РЂє РЂЁ * РЂє╠Б       Рќ╣ РѕЁ Ріб       ­Юћъ Рѕе ­ЮћЪ РЅІРѓљ ­ЮћЪ Рѕе ­Юћъ
  РіцUРѕДр┤И : РЂЁ * РЂє╠Б             Рќ╣ РѕЁ Ріб       Ріц РѕД ­Юћъ РЅІРѓљ ­Юћъ
  РѕДA   : РЂЁ * РЂє РЂЁ * РЂє РЂЁ * РЂє╠Б Рќ╣ РѕЁ Ріб (­Юћъ РѕД ­ЮћЪ) РѕД ­Юћа РЅІРѓљ ­Юћъ РѕД (­ЮћЪ РѕД ­Юћа)
  РѕДDРѕер┤И : РЂЁ * РЂє РЂЁ * РЂє РЂЁ * РЂє╠Б Рќ╣ РѕЁ Ріб ­Юћъ РѕД (­ЮћЪ Рѕе ­Юћа) РЅІРѓљ (­Юћъ РѕД ­ЮћЪ) Рѕе (­Юћъ РѕД ­Юћа)
  РіЦXРѕДр┤И : РЂЁ * РЂє╠Б             Рќ╣ РѕЁ Ріб       РіЦ РѕД ­Юћъ РЅІРѓљ РіЦ
  ┬гNРѕер┤И : РЂЁ * РЂє╠Б             Рќ╣ РѕЁ Ріб   (┬г ­Юћъ) Рѕе ­Юћъ РЅІРѓљ РіЦ
  РѕДC   : РЂЁ * РЂє РЂЁ * РЂє╠Б       Рќ╣ РѕЁ Ріб       ­Юћъ РѕД ­ЮћЪ РЅІРѓљ ­ЮћЪ РѕД ­Юћъ
  РѕеI   : РЂЁ * РЂє╠Б             Рќ╣ РѕЁ Ріб       ­Юћъ Рѕе ­Юћъ РЅІРѓљ ­Юћъ
  РѕДI   : РЂЁ * РЂє╠Б             Рќ╣ РѕЁ Ріб       ­Юћъ РѕД ­Юћъ РЅІРѓљ ­Юћъ
  ┬г┬▓   : РЂЁ * РЂє╠Б             Рќ╣ РѕЁ Ріб     ┬г (┬г ­Юћъ) РЅІРѓљ ­Юћъ
  РѕеDРѕДр┤И : РЂЁ * РЂє РЂЁ * РЂє РЂЁ * РЂє╠Б Рќ╣ РѕЁ Ріб ­Юћъ Рѕе (­ЮћЪ РѕД ­Юћа) РЅІРѓљ (­Юћъ Рѕе ­ЮћЪ) РѕД (­Юћъ Рѕе ­Юћа)
  РіцXРѕер┤И : РЂЁ * РЂє╠Б             Рќ╣ РѕЁ Ріб       Ріц Рѕе ­Юћъ РЅІРѓљ Ріц
  ┬гNРѕДр┤И : РЂЁ * РЂє╠Б             Рќ╣ РѕЁ Ріб   (┬г ­Юћъ) РѕД ­Юћъ РЅІРѓљ РіЦ
  DMРѕД  : РЂЁ * РЂє РЂЁ * РЂє╠Б       Рќ╣ РѕЁ Ріб   ┬г (­Юћъ РѕД ­ЮћЪ) РЅІРѓљ (┬г ­Юћъ) Рѕе (┬г ­ЮћЪ)
  DMРѕе  : РЂЁ * РЂє РЂЁ * РЂє╠Б       Рќ╣ РѕЁ Ріб   ┬г (­Юћъ Рѕе ­ЮћЪ) РЅІРѓљ (┬г ­Юћъ) РѕД (┬г ­ЮћЪ)

open EqLogic _Рќ╣_Ріб_РЅІРѓљ_
open РЅІ-Reasoning

-- Derived equations
РіЦUРѕер┤┐ : РЂЁ * РЂє╠Б Рќ╣ РѕЁ Ріб ­Юћъ Рѕе РіЦ РЅІ ­Юћъ
РіЦUРѕер┤┐ = tr (ax РѕеC withсђі ­Юћъ РЌЃ РіЦ сђІ) (ax РіЦUРѕер┤И withсђі ­Юћъ сђІ)
РіцUРѕДр┤┐ : РЂЁ * РЂє╠Б Рќ╣ РѕЁ Ріб ­Юћъ РѕД Ріц РЅІ ­Юћъ
РіцUРѕДр┤┐ = tr (ax РѕДC withсђі ­Юћъ РЌЃ Ріц сђІ) (ax РіцUРѕДр┤И withсђі ­Юћъ сђІ)
РѕДDРѕер┤┐ : РЂЁ * РЂє РЂЁ * РЂє РЂЁ * РЂє╠Б Рќ╣ РѕЁ Ріб (­Юћъ Рѕе ­ЮћЪ) РѕД ­Юћа РЅІ (­Юћъ РѕД ­Юћа) Рѕе (­ЮћЪ РѕД ­Юћа)
РѕДDРѕер┤┐ = begin
  (­Юћъ Рѕе ­ЮћЪ) РѕД ­Юћа       РЅІРЪе ax РѕДC withсђі ­Юћъ Рѕе ­ЮћЪ РЌЃ ­Юћа сђІ РЪЕ
  ­Юћа РѕД (­Юћъ Рѕе ­ЮћЪ)       РЅІРЪе ax РѕДDРѕер┤И withсђі ­Юћа РЌЃ ­Юћъ РЌЃ ­ЮћЪ сђІ РЪЕ
  (­Юћа РѕД ­Юћъ) Рѕе (­Юћа РѕД ­ЮћЪ)  РЅІРЪе congРѓѓ[ ax РѕДC withсђі ­Юћа РЌЃ ­Юћъ сђІ ][ ax РѕДC withсђі ­Юћа РЌЃ ­ЮћЪ сђІ ]inside РЌїрхѕ Рѕе РЌїрхЅ РЪЕ
  (­Юћъ РѕД ­Юћа) Рѕе (­ЮћЪ РѕД ­Юћа)  Рѕј
РіЦXРѕДр┤┐ : РЂЁ * РЂє╠Б Рќ╣ РѕЁ Ріб ­Юћъ РѕД РіЦ РЅІ РіЦ
РіЦXРѕДр┤┐ = tr (ax РѕДC withсђі ­Юћъ РЌЃ РіЦ сђІ) (ax РіЦXРѕДр┤И withсђі ­Юћъ сђІ)
┬гNРѕер┤┐ : РЂЁ * РЂє╠Б Рќ╣ РѕЁ Ріб ­Юћъ Рѕе (┬г ­Юћъ) РЅІ РіЦ
┬гNРѕер┤┐ = tr (ax РѕеC withсђі ­Юћъ РЌЃ (┬г ­Юћъ) сђІ) (ax ┬гNРѕер┤И withсђі ­Юћъ сђІ)
РѕеDРѕДр┤┐ : РЂЁ * РЂє РЂЁ * РЂє РЂЁ * РЂє╠Б Рќ╣ РѕЁ Ріб (­Юћъ РѕД ­ЮћЪ) Рѕе ­Юћа РЅІ (­Юћъ Рѕе ­Юћа) РѕД (­ЮћЪ Рѕе ­Юћа)
РѕеDРѕДр┤┐ = begin
  (­Юћъ РѕД ­ЮћЪ) Рѕе ­Юћа       РЅІРЪе ax РѕеC withсђі ­Юћъ РѕД ­ЮћЪ РЌЃ ­Юћа сђІ РЪЕ
  ­Юћа Рѕе (­Юћъ РѕД ­ЮћЪ)       РЅІРЪе ax РѕеDРѕДр┤И withсђі ­Юћа РЌЃ ­Юћъ РЌЃ ­ЮћЪ сђІ РЪЕ
  (­Юћа Рѕе ­Юћъ) РѕД (­Юћа Рѕе ­ЮћЪ)  РЅІРЪе congРѓѓ[ ax РѕеC withсђі ­Юћа РЌЃ ­Юћъ сђІ ][ ax РѕеC withсђі ­Юћа РЌЃ ­ЮћЪ сђІ ]inside РЌїрхѕ РѕД РЌїрхЅ РЪЕ
  (­Юћъ Рѕе ­Юћа) РѕД (­ЮћЪ Рѕе ­Юћа)  Рѕј
РіцXРѕер┤┐ : РЂЁ * РЂє╠Б Рќ╣ РѕЁ Ріб ­Юћъ Рѕе Ріц РЅІ Ріц
РіцXРѕер┤┐ = tr (ax РѕеC withсђі ­Юћъ РЌЃ Ріц сђІ) (ax РіцXРѕер┤И withсђі ­Юћъ сђІ)
┬гNРѕДр┤┐ : РЂЁ * РЂє╠Б Рќ╣ РѕЁ Ріб ­Юћъ РѕД (┬г ­Юћъ) РЅІ РіЦ
┬гNРѕДр┤┐ = tr (ax РѕДC withсђі ­Юћъ РЌЃ (┬г ­Юћъ) сђІ) (ax ┬гNРѕДр┤И withсђі ­Юћъ сђІ)
