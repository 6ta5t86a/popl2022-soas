{-
This second-order signature was created from the following second-order syntax description:

syntax Ring | R

type
  * : 0-ary

term
  zero : * | ùüò 
  add  : *  *  ->  * | _‚äï_ l20
  one  : * | ùüô 
  mult : *  *  ->  * | _‚äó_ l30
  neg  : *  ->  * | ‚äñ_ r50

theory
  (ùüòU‚äï·¥∏) a |> add (zero, a) = a
  (ùüòU‚äï·¥ø) a |> add (a, zero) = a
  (‚äïA) a b c |> add (add(a, b), c) = add (a, add(b, c))
  (‚äïC) a b |> add(a, b) = add(b, a)
  (ùüôU‚äó·¥∏) a |> mult (one, a) = a
  (ùüôU‚äó·¥ø) a |> mult (a, one) = a
  (‚äóA) a b c |> mult (mult(a, b), c) = mult (a, mult(b, c))
  (‚äóD‚äï·¥∏) a b c |> mult (a, add (b, c)) = add (mult(a, b), mult(a, c))
  (‚äóD‚äï·¥ø) a b c |> mult (add (a, b), c) = add (mult(a, c), mult(b, c))
  (ùüòX‚äó·¥∏) a |> mult (zero, a) = zero
  (ùüòX‚äó·¥ø) a |> mult (a, zero) = zero
  (‚äñN‚äï·¥∏) a |> add (neg (a), a) = zero
  (‚äñN‚äï·¥ø) a |> add (a, neg (a)) = zero
-}

module Ring.Signature where

open import SOAS.Context

open import SOAS.Common


open import SOAS.Syntax.Signature *T public
open import SOAS.Syntax.Build *T public

-- Operator symbols
data R‚Çí : Set where
  zero‚Çí add‚Çí one‚Çí mult‚Çí neg‚Çí : R‚Çí

-- Term signature
R:Sig : Signature R‚Çí
R:Sig = sig Œª
  {  zero‚Çí  ‚Üí ‚üº‚ÇÄ *
  ;  add‚Çí   ‚Üí (‚ä¢‚ÇÄ *) , (‚ä¢‚ÇÄ *) ‚üº‚ÇÇ *
  ;  one‚Çí   ‚Üí ‚üº‚ÇÄ *
  ;  mult‚Çí  ‚Üí (‚ä¢‚ÇÄ *) , (‚ä¢‚ÇÄ *) ‚üº‚ÇÇ *
  ;  neg‚Çí   ‚Üí (‚ä¢‚ÇÄ *) ‚üº‚ÇÅ *
  }

open Signature R:Sig public
