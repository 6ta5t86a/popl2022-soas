{-
This second-order equational theory was created from the following second-order syntax description:

syntax Ring | R

type
  * : 0-ary

term
  zero : * | ­ЮЪў
  add  : *  *  ->  * | _РіЋ_ l20
  one  : * | ­ЮЪЎ
  mult : *  *  ->  * | _РіЌ_ l30
  neg  : *  ->  * | Ріќ_ r50

theory
  (­ЮЪўUРіЋр┤И) a |> add (zero, a) = a
  (­ЮЪўUРіЋр┤┐) a |> add (a, zero) = a
  (РіЋA) a b c |> add (add(a, b), c) = add (a, add(b, c))
  (РіЋC) a b |> add(a, b) = add(b, a)
  (­ЮЪЎUРіЌр┤И) a |> mult (one, a) = a
  (­ЮЪЎUРіЌр┤┐) a |> mult (a, one) = a
  (РіЌA) a b c |> mult (mult(a, b), c) = mult (a, mult(b, c))
  (РіЌDРіЋр┤И) a b c |> mult (a, add (b, c)) = add (mult(a, b), mult(a, c))
  (РіЌDРіЋр┤┐) a b c |> mult (add (a, b), c) = add (mult(a, c), mult(b, c))
  (­ЮЪўXРіЌр┤И) a |> mult (zero, a) = zero
  (­ЮЪўXРіЌр┤┐) a |> mult (a, zero) = zero
  (РіќNРіЋр┤И) a |> add (neg (a), a) = zero
  (РіќNРіЋр┤┐) a |> add (a, neg (a)) = zero
-}

module Ring.Equality where

open import SOAS.Common
open import SOAS.Context
open import SOAS.Variable
open import SOAS.Families.Core
open import SOAS.Families.Build
open import SOAS.ContextMaps.Inductive

open import Ring.Signature
open import Ring.Syntax

open import SOAS.Metatheory.SecondOrder.Metasubstitution R:Syn
open import SOAS.Metatheory.SecondOrder.Equality R:Syn
open import SOAS.Metatheory

open R:Syntax
open import SOAS.Syntax.Shorthands RрхЃ

private
  variable
    ╬▒ ╬▓ ╬│ ¤ё : *T
    ╬Њ ╬ћ ╬а : Ctx

infix 1 _Рќ╣_Ріб_РЅІРѓљ_

-- Axioms of equality
data _Рќ╣_Ріб_РЅІРѓљ_ : Рѕђ ­Юћљ ╬Њ {╬▒} Рєњ (­Юћљ Рќи R) ╬▒ ╬Њ Рєњ (­Юћљ Рќи R) ╬▒ ╬Њ Рєњ Set where
  ­ЮЪўUРіЋр┤И : РЂЁ * РЂє╠Б             Рќ╣ РѕЁ Ріб       ­ЮЪў РіЋ ­Юћъ РЅІРѓљ ­Юћъ
  РіЋA   : РЂЁ * РЂє РЂЁ * РЂє РЂЁ * РЂє╠Б Рќ╣ РѕЁ Ріб (­Юћъ РіЋ ­ЮћЪ) РіЋ ­Юћа РЅІРѓљ ­Юћъ РіЋ (­ЮћЪ РіЋ ­Юћа)
  РіЋC   : РЂЁ * РЂє РЂЁ * РЂє╠Б       Рќ╣ РѕЁ Ріб       ­Юћъ РіЋ ­ЮћЪ РЅІРѓљ ­ЮћЪ РіЋ ­Юћъ
  ­ЮЪЎUРіЌр┤И : РЂЁ * РЂє╠Б             Рќ╣ РѕЁ Ріб       ­ЮЪЎ РіЌ ­Юћъ РЅІРѓљ ­Юћъ
  ­ЮЪЎUРіЌр┤┐ : РЂЁ * РЂє╠Б             Рќ╣ РѕЁ Ріб       ­Юћъ РіЌ ­ЮЪЎ РЅІРѓљ ­Юћъ
  РіЌA   : РЂЁ * РЂє РЂЁ * РЂє РЂЁ * РЂє╠Б Рќ╣ РѕЁ Ріб (­Юћъ РіЌ ­ЮћЪ) РіЌ ­Юћа РЅІРѓљ ­Юћъ РіЌ (­ЮћЪ РіЌ ­Юћа)
  РіЌDРіЋр┤И : РЂЁ * РЂє РЂЁ * РЂє РЂЁ * РЂє╠Б Рќ╣ РѕЁ Ріб ­Юћъ РіЌ (­ЮћЪ РіЋ ­Юћа) РЅІРѓљ (­Юћъ РіЌ ­ЮћЪ) РіЋ (­Юћъ РіЌ ­Юћа)
  РіЌDРіЋр┤┐ : РЂЁ * РЂє РЂЁ * РЂє РЂЁ * РЂє╠Б Рќ╣ РѕЁ Ріб (­Юћъ РіЋ ­ЮћЪ) РіЌ ­Юћа РЅІРѓљ (­Юћъ РіЌ ­Юћа) РіЋ (­ЮћЪ РіЌ ­Юћа)
  ­ЮЪўXРіЌр┤И : РЂЁ * РЂє╠Б             Рќ╣ РѕЁ Ріб       ­ЮЪў РіЌ ­Юћъ РЅІРѓљ ­ЮЪў
  ­ЮЪўXРіЌр┤┐ : РЂЁ * РЂє╠Б             Рќ╣ РѕЁ Ріб       ­Юћъ РіЌ ­ЮЪў РЅІРѓљ ­ЮЪў
  РіќNРіЋр┤И : РЂЁ * РЂє╠Б             Рќ╣ РѕЁ Ріб   (Ріќ ­Юћъ) РіЋ ­Юћъ РЅІРѓљ ­ЮЪў

open EqLogic _Рќ╣_Ріб_РЅІРѓљ_
open РЅІ-Reasoning

-- Derived equations
­ЮЪўUРіЋр┤┐ : РЂЁ * РЂє╠Б Рќ╣ РѕЁ Ріб ­Юћъ РіЋ ­ЮЪў РЅІ ­Юћъ
­ЮЪўUРіЋр┤┐ = tr (ax РіЋC withсђі ­Юћъ РЌЃ ­ЮЪў сђІ) (ax ­ЮЪўUРіЋр┤И withсђі ­Юћъ сђІ)
РіќNРіЋр┤┐ : РЂЁ * РЂє╠Б Рќ╣ РѕЁ Ріб ­Юћъ РіЋ (Ріќ ­Юћъ) РЅІ ­ЮЪў
РіќNРіЋр┤┐ = tr (ax РіЋC withсђі ­Юћъ РЌЃ (Ріќ ­Юћъ) сђІ) (ax РіќNРіЋр┤И withсђі ­Юћъ сђІ)
